name: ðŸš€ Deploy to Netlify

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  # NODE_ENV: production # breaks next.js build
  NODE_VERSION: 18.x  # ref: https://nodejs.org/en/about/releases
  NETLIFY_NEXT_PLUGIN_SKIP: true
  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
  # For below, see: https://github.com/spencerlepine/blog/blob/main/.env.example
  GISCUS_PROJECT_ID: ${{ secrets.GISCUS_PROJECT_ID }}
  GISCUS_DISCUSSION_CATEGORY: ${{ secrets.GISCUS_DISCUSSION_CATEGORY }}
  GISCUS_DISCUSSION_CATEGORY_ID: ${{ secrets.GISCUS_DISCUSSION_CATEGORY_ID }}
  ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
  ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
  ALGOLIA_INDEX_NAME: ${{ secrets.ALGOLIA_INDEX_NAME }}

jobs:
  build_blog:
    runs-on: ubuntu-latest
    steps:
      - name: Clone Blog Repository
        uses: actions/checkout@v4
        with:
          repository: spencerlepine/blog

      - name: ðŸ”§ Set up Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Create .env File
        run: |
          echo "GISCUS_PROJECT_ID=${{ env.GISCUS_PROJECT_ID }}" >> .env
          echo "GISCUS_DISCUSSION_CATEGORY=\"${{ env.GISCUS_DISCUSSION_CATEGORY }}\"" >> .env
          echo "GISCUS_DISCUSSION_CATEGORY_ID=${{ env.GISCUS_DISCUSSION_CATEGORY_ID }}" >> .env
          echo "ALGOLIA_APP_ID=${{ env.ALGOLIA_APP_ID }}" >> .env
          echo "ALGOLIA_API_KEY=${{ env.ALGOLIA_API_KEY }}" >> .env
          echo "ALGOLIA_INDEX_NAME=${{ env.ALGOLIA_INDEX_NAME }}" >> .env

      # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/caching-dependencies-to-speed-up-workflows
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install

      - name:  Build
        run: npm run build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: blog  # Artifact name
          path: build  # Path to files

  netlify_deploy:
    runs-on: ubuntu-latest  
    needs: build_blog  
    environment:
      name: deployment
      url: https://spencerlepine.com

    steps:
    - uses: actions/checkout@v4

    - name: ðŸ”§ Set up Node ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: "ðŸ“¦ Install Dependencies"
      run: |
        yarn install
        yarn global add netlify-cli@^17.36.3

    - name: Prepare `public/blog` Folder
      run: mkdir -p public/blog

    - name: Download Blog Artifacts
      uses: actions/download-artifact@v4
      with:
        name: blog
        path: public/blog

    - name: Build project
      id: build-netlify
      run: |
        netlify build
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

    - name: ðŸš€ Netlify Deploy
      env:
        NETLIFY_AUTH_TOKEN: ${{ env.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ env.NETLIFY_SITE_ID }}
      run: netlify deploy --prod